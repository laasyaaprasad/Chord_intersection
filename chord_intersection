def count_intersections_quadratic(radians, identifiers):
    intersections = 0

    def count_intersections(radian_measures, chord_identifiers):
    events = []  # List to store start and end events

    # Populate events list with start and end events
    for i, radian in enumerate(radian_measures):
        identifier = chord_identifiers[i]
        if identifier.startswith("s_"):
            events.append((radian, "start", identifier))
        elif identifier.startswith("e_"):
            events.append((radian, "end", identifier))

      
            if start_i < start_j < end_i and end_i < end_j: # Check for intersection
                intersections += 1

    return intersections


radians = [0.9, 1.3, 1.70, 2.92]
identifiers = ['s1', 'e1', 's2', 'e2']
result = count_intersections_quadratic(radians, identifiers)
print(f"Number of intersections: {result}")
